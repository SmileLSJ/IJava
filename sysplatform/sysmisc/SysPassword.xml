<?xml version="1.0" encoding="gbk"?>
<!DOCTYPE View PUBLIC "-//Keem Group//Kingfisher Feather 3.0//EN" "http://www.keemchina.com/kingfisher/feather-3.0.dtd">
<!--
	*****************************************
	修改口令
	乔武军设计      
	2007.07.13  
	Width=350 Height=240
	*****************************************
-->
<View skin="default" showDialogOnLoadingData="false">
	<Datasets>
		<Dataset id="dsObject" type="Reference" insertOnEmpty="true">
			<Fields>
				<Field name="PWD" dataType="string">
					 <Validator type="Pattern" errorMessage="密码必须包含大小字母，数字，特殊字符中的任意三种，且长度为8-30个字符！" 
						pattern="^(?![0-9a-z]+$)(?![0-9A-Z]+$)(?![0-9\\W]+$)(?![a-z\\W]+$)(?![a-zA-Z]+$)(?![A-Z\\W]+$)[a-zA-Z0-9\\W_]{8,30}"/>
				</Field>
			</Fields>
		</Dataset>
		<Dataset id="dsQuery_User" type="SimpleQuery"
			sql="select count(1) as CNT from Sys_User where UserID=%{#session.CheckIn.UserID} and PassWord=#PWD#" />
		<Dataset id="dsQuery_Config" type="SimpleQuery"
			sql="select * from Sys_Config where CFGCODE='SysAllowSimplePWD'" />
		<Dataset id="dsUpdate_Config" type="SimpleUpdate"	
			sql = "insert into Sys_Config(CfgID, CfgGroup, CfgCode, CfgName, CfgLabel, CfgValue, CfgSValue, UpdateDate, UpdateBy) 
			  select nvl(max(CfgID),0)+1, '系统参数', 'SysAllowSimplePWD', '系统密码强度', '是否允许简单密码', '1', null, sysdate, 'SYS' from Sys_Config"/>
		<Dataset id="dsUpdate_PWD" type="SimpleUpdate"	
			sql="update Sys_User set Password=#PWD# where UserID=%{#session.CheckIn.UserID}"/>
	</Datasets>
	<Controls>
		<Control id="UserCode" type="TextEditor" width="100%" />
		<Control id="UserName" type="TextEditor" width="100%" />
		<Control id="OriPWD" type="TextEditor" width="100%"
			editorType="password" />
		<Control id="PWD" type="TextEditor" width="100%"
			editorType="password" dataset="dsObject" field="PWD"/>
		<Control id="PWD2" type="TextEditor" width="100%"
			editorType="password" />
		<Control id="btnOK" type="Button" value="保存" width="75"
			decorate="%{applicationRoot}/exhibit/sysimgs/save.gif">
			<Events>
				<Event name="onClick">save();</Event>
			</Events>
		</Control>
		<Control id="btnClose" type="Button" value="关闭" width="75">
			<Events>
				<Event name="onClick">FloatSubWindowClose();</Event>
			</Events>
		</Control>
		
		<Control id="cmdMD5" type="RPCCommand" showLoadingTip="false"
			action="/retrieve.do?className=session.sys.SysManagerDAO&amp;ferry=set&amp;method=getMD5Str">
		</Control>
	</Controls>
	<Events>
		<Event name="functions">
			<![CDATA[
				if (parent._ExchangeParams){
		        	var callObjectInfo = parent._ExchangeParams;
		        }else{
		        	var callObjectInfo = window.dialogArguments;
		        }
				var actionCode = callObjectInfo.ActionCode;
				var actionName = callObjectInfo.ActionName;
				
				function check()
			  	{
				  	if (OriPWD.value=="")
				  	{
				  		smoke.alert("原始密码不能为空！");
				  		OriPWD.focus();
				  		return false;
				  	}
				  	else if (PWD.value=="")
				  	{
				  		smoke.alert("新密码不能为空！");
				  		PWD.focus();
				  		return false;
				  	}
				  	else if (PWD.value.length<=7)
				  	{
				  		smoke.alert("“新密码”不能长度少于8位！");
				  		PWD.focus();
				  		return false;
				  	}
				  	else if ((checkStrong(PWD.value)<=2) && (dsQuery_Config.getValue("CfgValue") !== "1"))
				  	{
				  		smoke.alert("“新密码”不安全，必须包含大小字母，数字，特殊字符中的任意三种，且长度为8-30个字符！");
				  		PWD.focus();
				  		return false;
				  	}
				  	else if (PWD.value.length >30)
				  	{
				  		smoke.alert("新密码不能长度大于30位！");
				  		PWD.focus();
				  		return false;
				  	}
				  	else if (PWD2.value!==PWD.value)
				  	{
				  		smoke.alert("确认密码不一致！");
				  		PWD2.focus();
				  		return false;
				  	}
				  	else
				      return true;
			  	}
			  
			  	function getMD5(SourceStr)
                {
                	var MD5Str = "";
					//Succeed
					cmdMD5.parameters().setValue("SourceStr", SourceStr);
					var CallSucceed = cmdMD5.execute();	
					if (CallSucceed)
					{
						var Succeed = cmdMD5.outParameters().getValue("Succeed");
						if (Succeed == "1")
						{
							MD5Str = cmdMD5.outParameters().getValue("MD5Str");
							return MD5Str;
						}
						else
						{
							smoke.alert("密码加密失败！");
							return false;
						}
					}
					else
					{
						smoke.alert("密码加密失败！");
						return false;
					}
				}
				
				function save()
				{
				    if (check())
				    {
				    	var v_Password = getMD5(OriPWD.value);
				    	if (!v_Password) 
				    		return false;
				    		
				    	dsQuery_User.parameters().setValue("PWD", v_Password, "string");
				    	dsQuery_User.flushData();
						//判断sql调用是否出现异常
						if (parseInt(dsQuery_User.getValue("CNT"),10) == 0)
						{
							smoke.alert("“原始密码”不正确！");
							OriPWD.focus();
							return true;
						}
						
						v_Password = getMD5(PWD.value);
						if (!v_Password) 
			    			return false;
						dsUpdate_PWD.parameters().setValue("PWD", v_Password, "string");
						if	(dsUpdate_PWD.saveDB())
						{
							smoke.alert("密码修改成功！", function(e){
								parent.window.location.href=__CONTEXT_PATH + "/red.jsp"
							});
							//FloatSubWindowClose();
						}
				    }
				}
			  
			  	function setLabelAccountInfo()
			  	{
					var accCode = "%{#session.CheckIn.UserCode}";
					var accName = "%{#session.CheckIn.UserName}";
					UserCode.value = accCode;
					UserName.value = accName;
					UserCode.disabled = true;
					UserName.disabled = true;
					OriPWD.focus();
			 	}
			 	
			 	//CharMode函数
				//测试某个字符是属于哪一类.
				function CharMode(iN){
				  if (iN>=48 && iN <=57) //数字
				    return 1;
				  if (iN>=65 && iN <=90) //大写字母
				    return 2;
				  if (iN>=97 && iN <=122) //小写
				    return 4;
				  else
				    return 8; //特殊字符
				}
				//bitTotal函数
				//计算出当前密码当中一共有多少种模式
				function bitTotal(num){
				  modes=0;
				  for (i=0;i<4;i++){
				    if (num & 1) modes++;
				    num /= 2;
				  }
				  return modes;
				}
				//checkStrong函数
				//返回密码的强度级别
				function checkStrong(sPW){
				  if (sPW.length<=4)
				    return 1; //密码太短
				  Modes=0;
				  for (i=0;i<sPW.length;i++){
				    //测试每一个字符的类别并统计一共有多少种模式.
				    Modes|=CharMode(sPW.charCodeAt(i));
				  }
				  return bitTotal(Modes);
				}
				//pwStrength函数

			 	function PasswordStrength(passwordID,strengthID){
				    this.init(strengthID);
				    var _this = this;
				    document.getElementById(passwordID).onkeyup = function(){
				        _this.checkStrength(this.value);
				    }
				};
				PasswordStrength.prototype.init = function(strengthID){
				    var id = document.getElementById(strengthID);
				    var div = document.createElement('div');
				    var strong = document.createElement('strong');
				    this.oStrength = id.appendChild(div);
				    this.oStrengthTxt = id.parentNode.appendChild(strong);
				};
				PasswordStrength.prototype.checkStrength = function (val){
				    var aLvTxt = ['','低','中','高'];
				    var lv = checkStrong(val);
				    if(lv > 4){lv=4;}
				    this.oStrength.className = 'strengthLv' + lv;
				    //this.oStrengthTxt.innerHTML = aLvTxt[lv];
				};
			]]>
		</Event>
		<Event name="onLoad">
			<![CDATA[
				setLabelAccountInfo();
				new PasswordStrength('PWD','passStrength');
				dsQuery_Config.flushData();
				if (dsQuery_Config.getVisibleCount()<=0){
					dsUpdate_Config.saveDB();
					dsQuery_Config.flushData();
				}
			]]>
		</Event>
	</Events>
</View>

